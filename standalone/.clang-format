# :!cp ./.clang-format ~/Developer

BasedOnStyle: LLVM

AlignConsecutiveMacros: Consecutive
# AlignConsecutiveDeclarations: Consecutive
# AlignConsecutiveAssignments: Consecutive
# AlignConsecutiveShortCaseStatements: #Â Don't work :/
AlignEscapedNewlines: Left

AlignOperands: Align
AlignTrailingComments: true
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: true
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: None

# BreakBeforeBraces: Linux
BreakBeforeBinaryOperators: true
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: false
  AfterControlStatement: Always # Never, MultiLine, Always
  AfterEnum: false
  AfterFunction: true
  AfterStruct: false
  AfterUnion: false
  BeforeElse: true
  BeforeWhile: true
  IndentBraces: false
  SplitEmptyFunction: false

BreakBeforeTernaryOperators: true
DerivePointerAlignment: false

MaxEmptyLinesToKeep: 3

IncludeBlocks: Regroup
IncludeCategories:
# Standard Libraries
  - Regex:           '<std.*>'
    Priority:        1

# Other "external" libraries
  - Regex:           '<.*>'
    Priority:        2

# Project files
  - Regex:           '".*"'
    Priority:        3

# Internal headers

IndentCaseLabels: true
IndentPPDirectives: None
IndentWidth: 4

# InsertNewlineAtEOF: true
# InsertTrailingCommas: true
# KeepEmptyLinesAtEOF: true
# KeepEmptyLinesAtTheStartOfBlocks: true

PointerAlignment: Left

SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAroundPointerQualifiers: Before
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeParens: Never
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: true
SpaceInEmptyParentheses: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

TabWidth: 4
UseTab: Always
